{"version":3,"sources":["Components/About.js","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","myStyle","setMyStyle","useState","color","backgroundColor","btntext","setBtnText","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","ToggleStyle","border","class","Navbar","props","concat","mode","Link","to","title","aria-label","aria-current","AboutText","href","role","toggleMode","htmlForfor","TextForm","text","setText","Fragment","heading","value","onChange","event","target","rows","handleUpclick","newText","toUpperCase","showAlert","handleLoclick","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","Mode","setMode","setAlert","message","setTimeout","BrowserRouter","document","body","setInterval","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.096fc7e0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport default function About() {\r\n  const [myStyle, setMyStyle] = useState({\r\n    color: \"black\",\r\n    backgroundColor: \"white\",\r\n  });\r\n  const [btntext, setBtnText] = useState(\"Enable dark Mode\");\r\n\r\n  const ToggleStyle = () => {\r\n    if (myStyle.color === \"black\") {\r\n      setMyStyle({\r\n        color: \"white\",\r\n        backgroundColor: \"black\",\r\n        border: \"1px solid white\",\r\n      });\r\n      setBtnText(\"Enable light mode\");\r\n    } else {\r\n      setMyStyle({\r\n        color: \"black\",\r\n        backgroundColor: \"white\",\r\n      });\r\n      setBtnText(\"Enable dark mode\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h1 className=\"my-3\">About us </h1>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong>Who is Hexagon? </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              \r\n              Hexagon is the global leader in digital reality solutions,\r\n              combining sensor, software and autonomous technologies. Our\r\n              solutions free our customers to harness the rapidly-increasing\r\n              amounts of data, putting it to work to boost efficiency,\r\n              productivity, quality and safety across industrial, manufacturing,\r\n              infrastructure, public sector and mobility applications.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong> Our unique strategy. </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\">\r\n              Hexagon’s strategy targets the rapidly widening gap between the\r\n              enormous amounts of data being created and the world’s ability to\r\n              harness it. For more than a decade, literally billions of 'things'\r\n              — sensors and devices — are being connected to the internet. Our\r\n              unique approach is to create value by freeing our customers to\r\n              actually use all this data — to put it to work in new,\r\n              world-changing ways.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item\">\r\n          <h2 className=\"accordion-header\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong> The outcomes we seek. </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              At our very core is a powerful vision of a future where data is\r\n              fully leveraged so that business, industry and humanity\r\n              sustainably thrive. We believe in a world where economic growth\r\n              does not come at the expense of the planet and its people, and\r\n              that we should drive sustainability efforts in every aspect of our\r\n              business. Our goal is to empower our customers with the freedom to\r\n              use data to its greatest potential — the freedom to innovate, the\r\n              freedom to thrive, the freedom to ensure a sustainable planet for\r\n              future generations. Hexagon (Nasdaq Stockholm: HEXA B) has\r\n              approximately 24,500 employees in 50 countries and net sales of\r\n              approximately 5.4bn EUR. Learn more at hexagon.com and follow us\r\n              @HexagonAB.\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <button onClick={ToggleStyle} type=\"button\" class=\"btn btn-primary\">\r\n          {btntext}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <a className=\"navbar-brand\" href=\"#\">{props.title}</a> */}\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n              {/* <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a> */}\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                {props.AboutText}\r\n              </Link>\r\n            </li>\r\n            {/* {\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                  Licensing\r\n                </a>\r\n              </li>\r\n            } */}\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"/\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Quote\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Raise new quote\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    View existing quote\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlForfor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  AboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  AboutText: \"About\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = ()=>{\r\n      //console.log(\"Uppercase was clicked\" + text);\r\n      let newText = text.toUpperCase();  \r\n   setText(newText)\r\n   props.showAlert(\"converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoclick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();  \r\n     setText(newText)\r\n     props.showAlert(\"converted to lowercase\", \"success\");\r\n      }\r\n    const handleOnChange = (event)=>{\r\n      //  console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n//text = \"new text\"; //Wrong way to change the state\r\n//setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n    <>\r\n<div className=\"container\"style={{color:props.mode==='dark'? 'white': '#30507d'}}>\r\n    <h1>{props.heading} </h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'? 'grey': 'white', color:props.mode==='dark'? 'white': '#30507d'}} id=\"MyBox\" rows=\"5\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpclick}> Convert to uppercase\r\n    </button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoclick}> Convert to Lowercase\r\n    </button>\r\n    </div>\r\n    <div className=\"container my-6\"style={{color:props.mode==='dark'? 'white': '#30507d'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} Characters</p>\r\n        <p>{0.008 * text.split(\" \").length}MInutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1)\r\n\r\n    }\r\n\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n       \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react';\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  } from \"react-router-dom\";\n\nfunction App() {\n  const[Mode, setMode] = useState('light');\n  const[alert, setAlert] = useState(null);\n\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000); \n\n  }\n  const toggleMode=()=>{\n    if(Mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#30507d';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title= \"Hexagon - Dark Mode\";\n      setInterval(() => {\n        document.title= \"Hexagon is Software site\";\n      }, 2000);\n      setInterval(() => {\n        document.title= \"Grab the software now\";\n      }, 1500);\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title= \"Hexagon - Light Mode\";\n    }\n  }\n  return (\n    <>\n    {/* <Navbar title=\"Hexagon\" adminText=\"Admin\"/> */}\n    {/* <Navbar/> */} \n    {/* <Navbar title=\"Hexagon\"  mode={Mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/> \n    <div className=\"container my-3\"> */}\n\n    <BrowserRouter>\n    <Navbar title=\"Hexagon\"  mode={Mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>  \n    <div className=\"container my-3\"></div>  \n      <Routes>\n        <Route exact path=\"about\" element={<About />} />\n        <Route exact path=\"/*\" element={<TextForm showAlert={showAlert} heading= \"Enter the text to analyse\" mode={Mode}/>} />\n      </Routes>\n    </BrowserRouter>\n     \n      {/* <TextForm showAlert={showAlert} heading= \"Enter the text to analyse\" mode={Mode}/> */}\n    {/* <About/> */}\n      {/* </div> */}\n    \n\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}