{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","toggleMode","htmlForfor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","handleUpclick","newText","toUpperCase","showAlert","handleLoclick","toLowerCase","split","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","AboutText","App","Mode","setMode","setAlert","message","setTimeout","document","body","setInterval","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.f28860af.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n \r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              \r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              \r\n            </li>\r\n            \r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"/\"\r\n                role=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Quote\r\n              </a>\r\n              <ul className=\"dropdown-menu\">\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    Raise new quote\r\n                  </a>\r\n                </li>\r\n                <li>\r\n                  <a className=\"dropdown-item\" href=\"/\">\r\n                    View existing quote\r\n                  </a>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n\r\n          {/* <form className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlForfor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable DarkMode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  AboutText: PropTypes.string.isRequired,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  AboutText: \"About\",\r\n};\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpclick = ()=>{\r\n      //console.log(\"Uppercase was clicked\" + text);\r\n      let newText = text.toUpperCase();  \r\n   setText(newText)\r\n   props.showAlert(\"converted to uppercase\", \"success\");\r\n    }\r\n    const handleLoclick = ()=>{\r\n        //console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toLowerCase();  \r\n     setText(newText)\r\n     props.showAlert(\"converted to lowercase\", \"success\");\r\n      }\r\n    const handleOnChange = (event)=>{\r\n      //  console.log(\"On change\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n//text = \"new text\"; //Wrong way to change the state\r\n//setText(\"new text\"); //Correct way to change the state\r\n    return (\r\n    <>\r\n<div className=\"container\"style={{color:props.mode==='dark'? 'white': '#30507d'}}>\r\n    <h1>{props.heading} </h1>\r\n<div className=\"mb-3\">\r\n<textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'? 'grey': 'white', color:props.mode==='dark'? 'white': '#30507d'}} id=\"MyBox\" rows=\"5\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpclick}> Convert to uppercase\r\n    </button>\r\n    <button className=\"btn btn-primary mx-2\" onClick={handleLoclick}> Convert to Lowercase\r\n    </button>\r\n    </div>\r\n    <div className=\"container my-6\"style={{color:props.mode==='dark'? 'white': '#30507d'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} Characters</p>\r\n        <p>{0.008 * text.split(\" \").length}MInutes read</p>\r\n    <h2>Preview</h2>\r\n    <p>{text.length>0?text:\"Enter something above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n  \r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+ lower.slice(1)\r\n\r\n    }\r\n\r\n  return (\r\n    \r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n       \r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport React,{useState} from 'react';\nimport Alert from './Components/Alert';\n\n\nfunction App() {\n  const[Mode, setMode] = useState('light');\n  const[alert, setAlert] = useState(null);\n\n  const showAlert =(message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000); \n\n  }\n  const toggleMode=()=>{\n    if(Mode==='light'){\n      setMode('dark')\n      document.body.style.backgroundColor='#30507d';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title= \"Hexagon - Dark Mode\";\n      setInterval(() => {\n        document.title= \"Hexagon is Software site\";\n      }, 2000);\n      setInterval(() => {\n        document.title= \"Grab the software now\";\n      }, 1500);\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title= \"Hexagon - Light Mode\";\n    }\n  }\n  return (\n    <>\n    \n    <Navbar title=\"Hexagon\"  mode={Mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/> \n    <div className=\"container my-3\">\n\n     \n      <TextForm showAlert={showAlert} heading= \"Enter the text to analyse\" mode={Mode}/>\n   \n      </div>\n    \n\n    </> \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}